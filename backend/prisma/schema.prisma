generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  username     String        @unique
  email        String        @unique
  passwordHash String?
  accessToken  String?
  isGoogle     Boolean       @default(false)
  isGithub     Boolean       @default(false)
  payments     Payments[]
  snippets     Snippet[]
  sessions     Session[]
  isSubscribed Boolean       @default(false)
  subscription Subscription?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Session {
  id           String   @id @default(uuid())
  userId       String
  token        String   @unique
  isValid      Boolean  @default(true)
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
}

model Payments {
  id        String   @id @default(uuid())
  userId    String
  createdAt DateTime @default(now())
  amount    Float
  paymentId String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Subscription {
  id              String   @id @default(uuid())
  userId          String   @unique
  expiryDate      DateTime
  daysWithService Int      @default(0)
  user            User     @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
}

model Snippet {
  id          String       @id @default(uuid())
  title       String
  description String
  content     String
  language    String
  userId      String
  favorite    Boolean      @default(false)
  user        User         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tags        SnippetTag[]
  isPrivate   Boolean      @default(false)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Tag {
  id       String       @id @default(uuid())
  name     String       @unique
  snippets SnippetTag[]
}

model SnippetTag {
  snippetId String
  tagId     String
  snippet   Snippet @relation(fields: [snippetId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tag       Tag     @relation(fields: [tagId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  @@id([snippetId, tagId])
}
